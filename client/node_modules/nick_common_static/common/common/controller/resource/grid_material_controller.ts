/**
 * Created by NICK on 15/11/25.
 * email:nick121212@126.com
 * qq:289412378
 * copyright NICK
 */

import ref = require('ref');
import base = require('common/common/controller/grid_material_controller');
import toolbarItem = require('common/models/common/toolbar_item');

export class GridController<T> extends base.GridController<T> {

    public serverInterfaces:{[index: string]: ng.IPromise<any>} = {};
    public searchData:any = {};

    clearWhere() {
        var p;
        for (p in this.queryData.where) {
            delete this.queryData.where[p];
        }
    }

    resetSearch() {
        this.clearWhere();
        this.searchData = {};
    }

    /*
     * 搜索
     * */
    doSearch(form:angular.IFormController) {
        var searchFilters = {}, p, str;

        if (true || form.$dirty) {
            this.clearWhere();
            for (p in this.searchData) {
                if (!this.searchData.hasOwnProperty(p)) continue;
                if (p.search('r-') == 0) {
                    this.queryData.where[p.replace('r-', '')] = this.searchData[p];
                }
            }
            form.$setPristine();
            this.onPageChange(1, this.queryData.pageCount);
            this.getServerData();
            this.$sForm = form;
        }
    }

    confirm(opts:any, serverInterfaces, filterData:Function = ()=> {
    }, success:Function = ()=> {
    }) {
        var confirm = this.$mdDialog.confirm()
            .title(opts.title)
            .content(opts.content)
            .targetEvent(opts.$event)
            .ok(opts.ok || "确定")
            .cancel(opts.cancel || "取消");
        var promises:{[index: string]: ng.IPromise<any>} = {};

        if (this.selected.length > 0 || opts.ignoreSelection) {
            this.$mdDialog.show(confirm).then(()=> {
                angular.forEach(serverInterfaces, (fn:Function, key:string) => {
                    promises[key] = fn((filterData && filterData.call(this, this.selected)) || this.selected);
                });
                this.deferred = this.$q.all(promises).then((data)=> {
                    opts.isRefresh && this.getServerData();
                    this.showMsg('执行成功!');
                    success && success.call(this, data);
                });
            });
        }
    }

    /*
     * 拉取服务器数据
     * */
    getServerData() {
        var promises:{[index: string]: ng.IPromise<any>} = {};

        if (this.isBusy) return;
        //this.clearSelected();
        this.isBusy = true;
        this.abort();

        angular.forEach(this.serverInterfaces, (fn:Function, key:string) => {
            promises[key] = fn();
        });

        if (this.searchMode) {
            angular.extend(this.queryData.where, this.defQuery);
        } else {
            this.clearWhere();
            angular.extend(this.queryData.where, this.defQuery);
        }
        this.deferred = this.$q.all(promises).then((data)=> {
            this.clientData = this.dataFilter(data);
        }, (data)=> {
            //console.log(data);
        }).finally(()=> {
            this.isBusy = false;
        });

        return this.deferred;
    }
}