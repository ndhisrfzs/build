/**
 * Created by NICK on 15/10/13.
 * email:nick121212@126.com
 * qq:289412378
 * copyright NICK
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
define(["require", "exports", "common/common/controller/base_material_controller"], function (require, exports, common) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Directive = (function (_super) {
        __extends(Directive, _super);
        function Directive() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return Directive;
    }(common.BaseController));
    Directive._name = "dyCompile";
    Directive.directive = ['$rootScope', '$compile', function ($rootScope, $compile) {
            var directive = {
                replace: true,
                restrict: 'EA',
                scope: {
                    item: '=',
                    $index: '=',
                    query: '='
                }
            };
            directive.link = function (scope, elm, iAttrs) {
                var DUMMY_SCOPE = {
                    $destroy: angular.noop
                }, root = elm, childScope, destroyChildScope = function () {
                    (childScope || DUMMY_SCOPE).$destroy();
                };
                iAttrs.$observe("html", function (html) {
                    var content;
                    if (html) {
                        destroyChildScope();
                        childScope = scope.$new(false);
                        childScope.item = scope['item'];
                        childScope.$index = scope['$index'];
                        childScope.query = scope['query'];
                        if (html.search('<') == 0) {
                            content = $compile(html)(childScope);
                            root.replaceWith(content);
                            root = content;
                        }
                        else {
                            content = childScope.$eval(html);
                            root.text(content);
                        }
                    }
                    scope.$on("$destroy", destroyChildScope);
                });
            };
            return directive;
        }];
    exports.Directive = Directive;
});
//# sourceMappingURL=compile_directive.js.map